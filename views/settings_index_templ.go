// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/gorilla/csrf"
)

func SettingsIndex() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h2 class=\"text-2xl font-semibold mb-4\">Import Models</h2>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = SettingsForm().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"task-progress\" class=\"border border-gray-200 rounded-lg p-6 shadow-lg\"></div><script>\n        let hasConnected = false;\n        htmx.on(\"htmx:afterSwap\", function (evt) {\n            if (evt.detail.pathInfo.requestPath === \"/settings/run-fetch-job\") {\n                const taskStatus = document.getElementById(\"task-status\");\n                taskStatus.innerHTML = '<div class=\"text-gray-600\">Loading...</div>';\n            }\n        });\n\n        htmx.on(\"htmx:afterRequest\", function (evt) {\n            const taskStatus = document.getElementById(\"task-status\");\n            const progressDiv = document.getElementById(\"task-progress\");\n            taskStatus.innerHTML = \"\";\n\n            if (evt.detail.pathInfo.requestPath === \"/settings/run-fetch-job\" && !hasConnected) {\n                hasConnected = true;\n                const taskID = JSON.parse(evt.detail.xhr.responseText).taskID;\n\n                // Establish WebSocket connection\n                const socket = new WebSocket(`ws://${window.location.host}/ws/${taskID}`);\n\n                socket.onmessage = function (event) {\n                    taskStatus.innerHTML = \"\";\n                    const data = JSON.parse(event.data);\n\n                    if (data.status === \"in_progress\") {\n                        // Update progress counter\n                        const progressCounter = progressDiv.querySelector('.progress-counter') || document.createElement('div');\n                        progressCounter.className = 'progress-counter mb-4 p-4 bg-gray-100 border border-gray-300 rounded-lg text-gray-800';\n                        progressCounter.innerHTML = `\n                            <div class=\"flex justify-between items-center\">\n                                <span class=\"text-lg font-semibold\">Progress:</span>\n                                <span class=\"text-xl font-bold\">${data.current} / ${data.total}</span>\n                            </div>\n                            <div class=\"mt-2 bg-gray-300 rounded-full h-2.5\">\n                                <div class=\"bg-blue-500 h-2.5 rounded-full\" style=\"width: ${(data.current / data.total) * 100}%\"></div>\n                            </div>\n                        `;\n\n                        // Update or create log\n                        let logBlock = progressDiv.querySelector('code');\n                        if (!logBlock) {\n                            logBlock = document.createElement('code');\n                            logBlock.style.display = 'block';\n                            logBlock.style.whiteSpace = 'pre';\n                            logBlock.style.maxHeight = '200px';\n                            logBlock.style.overflowY = 'auto';\n                            logBlock.className = 'bg-gray-100 text-gray-800 border border-gray-300 rounded-lg p-4 overflow-x-hidden text-sm font-mono';\n                            progressDiv.appendChild(logBlock);\n                        }\n\n                        // Append new log entry\n                        logBlock.textContent += `Importing: ${data.currentModel}\\n`;\n                        logBlock.scrollTop = logBlock.scrollHeight;\n\n                        // Ensure counter is at the top\n                        progressDiv.insertBefore(progressCounter, progressDiv.firstChild);\n                    } else if (data.status === \"completed\") {\n                        const completed = document.createElement('div');\n                        completed.className = 'text-green-500 font-semibold mt-4';\n                        completed.innerText = 'Task completed successfully!';\n                        progressDiv.appendChild(completed);\n                        socket.close(1000, \"Task completed\");\n                        hasConnected = false;\n                    }\n                };\n\n                socket.onerror = function (error) {\n                    console.error(\"WebSocket Error:\", error);\n                    hasConnected = false;\n                };\n\n                socket.onclose = function (event) {\n                    if (!event.wasClean) {\n                        console.error(\"WebSocket connection closed unexpectedly\");\n                    }\n                    hasConnected = false;\n                };\n            }\n        });\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func SettingsForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"task-status\" class=\"mb-8\"><form hx-post=\"/settings/run-fetch-job\" hx-trigger=\"submit\" hx-target=\"#task-status\" hx-headers=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(`{"X-CSRF-Token": "` + templ.EscapeString(csrf.Token(ctx)) + `"}`)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/settings_index.templ`, Line: 99, Col: 90}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" hx-swap=\"innerHTML\" class=\"bg-background-card border border-border rounded-lg p-6 shadow-lg\"><div class=\"mb-4\"><label for=\"number-to-import\" class=\"block text-sm font-medium text-text-light mb-2\">Number of models to import</label> <input type=\"number\" name=\"limit\" min=\"1\" id=\"number-to-import\" class=\"w-full px-3 py-2 bg-background-dark text-text-light border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"></div><button type=\"submit\" class=\"w-full bg-primary-500 hover:bg-primary-600 text-white font-bold py-2 px-4 rounded-md transition duration-300 ease-in-out transform hover:scale-105\">Start Task</button></form></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
